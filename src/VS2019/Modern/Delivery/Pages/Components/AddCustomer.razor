@page "/AddCustomer"

@inject DeliverySupport.Services.IOrderCart cart

<h3>AddCustomer</h3>

<div>
    <EditForm Model="@customerModel" OnValidSubmit="@OnSubmit">
        <div class="form-group">
            <p><label for="name">Customer Name</label></p>
            <input class="form-control col-3" @bind="customerModel.CustomerName" placeholder="Name" />
        </div>

        <div class="form-group">
            <p><label for="address">Address</label></p>
            <input class="form-control col-3" @bind="customerModel.CustomerAddress" placeholder="Address" />
        </div>
        <div class="form-group">
            <p><label for="city">City</label></p>
            <input class="form-control col-3" @bind="customerModel.CustomerCity" placeholder="City" />
        </div>
        <div class="form-group">
            <p><label for="state">State</label></p>
            <input class="form-control col-3" @bind="customerModel.CustomerState" placeholder="State" />
        </div>
        <div class="form-group">
            <p><label for="zip">Zip</label></p>
            <input class="form-control col-3" @bind="customerModel.CustomerZip" placeholder="Zip" />
        </div>

        <button type="submit">Submit</button>
    </EditForm>
</div>

@code
{
    private DeliverySupport.Models.IOrderCustomerModel customerModel = new DisplayOrderCustomerModel();
    [Parameter]
    public EventCallback<string> OnTotal { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(0);
    }

    public async Task OnSubmit()
    {
        cart.AddCustomer(customerModel);
        await OnTotal.InvokeAsync("Totaling order");
    }
}
